l = map_dbl(model, ~.[1])*1E5,
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
) %>%
select(Gender, Country, l, g, h, H, lnh, m, b, U) %>%
mutate_if(is.numeric, ~round(., 5))
# Run optimization
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest %>% mutate(
model = map(data, ~fit_model(.$qtx, .$Age)$par ),
l = map_dbl(model, ~.[1])*1E5,
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
)
# Run optimization
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest %>% mutate(
model = map(data, ~fit_model(.$qtx, .$Age)$par ),
l = map_dbl(model, ~.[1])*1E5,
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
) -> Stage1_model
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
Stage1_model
# Run optimization
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest %>% mutate(
model = map(data, ~fit_model(.$qtx, .$Age)$par ),
l = map_dbl(model, ~.[1]),
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
) -> Stage1_model
Stage1_model  %>% write_rds("./data/02_models/stage1_optim.rds")
#################################################
# Stage Two - CLaM
#################################################
Stage1_model %>% compute_stage2 -> Stage2_model
Stage2_model
Stage1_model
View(Stage1_model)
# Function to minimize the output
fit_model = function(qtx, Age) optim(
par=c( 1E-4, 0, 1E-2 ), # <- these starting points were chosen to avoid local-minimas
fn=U(qtx, Age),
gr=dU(qtx, Age),
lower = c(0, 0, 0),
upper = c(min(qtx), 1E-4, 0.5), # Chosen emperically based on "zero-makeham" results
method = 'L-BFGS-B'
)
Stage1_model$g
Stage1_model$g %>% hist
library(plotly)
with(tmp$data[[which(tmp$Country == "RUS")[1]]], {
u <<- U(qtx, Age)
du <<- dU(qtx, Age)
lapply(
seq(0,0.3,l=20), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
}) -> tmp2
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest -> tmp
with(tmp$data[[which(tmp$Country == "RUS")[1]]], {
u <<- U(qtx, Age)
du <<- dU(qtx, Age)
lapply(
seq(0,0.3,l=20), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
}) -> tmp2
tmp2
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) ) %>%
distinct( H, g, l )
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, color=~U, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~l,y=~g, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g,color=~l, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g,size=~l, mode='markers', type='scatter3d')
?plot_ly
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g,color=~l, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g,color=~l, size=1/l, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g,color=~l, size=~1/l, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g,size=~1/l, mode='markers', type='scatter3d')
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, size=~1/U, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~l,y=~g,size=~1/g, mode='markers', type='scatter3d')
tmp2 %>%
ggplot(aes(y=U, x=l)) + geom_point()
tmp2 %>%
ggplot(aes(y=g, x=H, color=l, size=U)) + geom_point()
tmp2 %>%
ggplot(aes(y=g, x=H, color=l, size=1/U)) + geom_point()
tmp2 %>%
ggplot(aes(y=g, x=H, color=factor(l), size=1/U)) + geom_point()
tmp2 %>%
ggplot(aes(y=g, x=l, color=factor(l), size=1/U)) + geom_point()
tmp2 %>%
ggplot(aes(y=g, x=l, color=l, size=1/U)) + geom_point()
tmp2 %>%
ggplot(aes(y=H, x=l, color=g, size=1/U)) + geom_point()
tmp2 %>%
ggplot(aes(y=H, x=l, color=g)) +
facet_grid(~U) +
geom_point()
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) ) %>%
distinct( H, g, l )
source('~/.active-rstudio-document', echo=TRUE)
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) ) %>%
distinct( H, g, l )
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, size=~1/U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, size=~1/U, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~l,y=~g, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g, size=~l, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g, color=~l, mode='markers', type='scatter3d')
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) ) %>%
distinct( H, g, l )
with(tmp$data[[which(tmp$Country == "RUS")[1]]], {
u <<- U(qtx, Age)
du <<- dU(qtx, Age)
lapply(
seq(0,0.5,l=50), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
}) %>% mutate(
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g
) -> tmp2
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) )
lapply(
seq(0,0.5,l=50), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l*1E5,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
with(tmp$data[[which(tmp$Country == "RUS")[1]]], {
u <<- U(qtx, Age)
du <<- dU(qtx, Age)
lapply(
seq(0,0.5,l=50), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l*1E5,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
}) %>% mutate(
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g
) -> tmp2
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) )
with(tmp$data[[which(tmp$Country == "RUS")[1]]], {
u <<- U(qtx, Age)
du <<- dU(qtx, Age)
lapply(
seq(0,0.5,l=50), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
}) %>% mutate(
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g
) -> tmp2
with(tmp$data[[which(tmp$Country == "RUS")[1]]], {
u <<- U(qtx, Age)
du <<- dU(qtx, Age)
lapply(
seq(0,0.5,l=50), function(g) lapply(
seq(0,1E-4,l=20), function(H) lapply(
seq(0,min(qx),l=25), function(l) tibble(
g=g,l=l,H=H,
U=u(c(g,H,l)),
dU=du(c(g,H,l))
)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
) %>% reduce(bind_rows)
}) %>% mutate(
l = l*1E5, H = H*1E5,
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g
) -> tmp2
tmp2 %>% filter(is.finite(dU)) %>%
filter( U == min(U) )
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, size=~1/U, mode='markers', type='scatter3d')
tmp2 %>%
plot_ly(z=~U,x=~H,y=~g, color=~l, mode='markers', type='scatter3d')
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, size=~1/U, mode='markers', type='scatter3d')
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, color=~1/U, mode='markers', type='scatter3d')
tmp2 %>% filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.05) ) %>%
plot_ly(z=~l,x=~g,y=~H, color=~U, mode='markers', type='scatter3d')
tmp2 %>% filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~l,x=~g,y=~H, color=~U, mode='markers', type='scatter3d')
tmp2 %>% filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~g,y=~H, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~g,y=~l, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~H,y=~l, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~m,y=~g, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~m,y=~b, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~g,y=~b, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~g,y=~m, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~g,y=~H, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~g,y=~l, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~H,y=~l, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~H,y=~g, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~l,y=~g, color=~U, mode='markers', type='scatter3d')
tmp2 %>% #filter( U < quantile(U, 0.15) ) %>%
plot_ly(z=~U,x=~l,y=~g, color=~H, mode='markers', type='scatter3d')
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
Stage2_model
Stage1_model
compute_stage2
Stage1_model
Stage1_model %>% ggplot() + geom_point(aes(lnh, g))
Stage1_model %>% compute_table1
Stage1_model %>% rename(`Country Name` = Country) %>% compute_table1
# Run optimization
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest %>% mutate(
model = map(data, ~fit_model(.$qtx, .$Age)$par ),
l_m = map_dbl(model, ~.[1]),
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
) -> Stage1_model
Stage1_model  %>% write_rds("./data/02_models/stage1_optim.rds")
Stage1_model %>% ggplot() + geom_point(aes(lnh, g))
Stage1_model %>% rename(`Country Name` = Country) %>% compute_table1
Stage1_model
compute_table1
# Run optimization
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest %>% mutate(
model = map(data, ~fit_model(.$qtx, .$Age)$par ),
l = map_dbl(model, ~.[1]),
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
) -> Stage1_model
Stage1_model  %>% write_rds("./data/02_models/stage1_optim.rds")
Stage1_model %>% ggplot() + geom_point(aes(lnh, g))
Stage1_model %>% rename(`Country Name` = Country) %>%
mutate(l_m = l*1E5) %>%
compute_table1
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
input("Stop")
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
stage1_model_zm
stage1_model_zm %>%
mutate(
H = (exp(g)-1)*exp(lnh)/g
)
stage1_model_zm %>%
mutate(
H = (exp(g)-1)*exp(lnh)/g
) %>% select(l_m, H, g)
stage1_model_zm %>%
mutate(
H = (exp(g)-1)*exp(lnh)/g
) %>% select(l_m, H, g) %>%
gather(param, value)
stage1_model_zm %>%
mutate(
H = (exp(g)-1)*exp(lnh)/g
) %>% select(l_m, H, g) %>%
gather(param, value) %>%
group_by(param) %>%
summarise( min(value), max(value) )
stage1_model_zm %>%
mutate(
H = (exp(g)-1)*exp(lnh)/g
) %>%
select(H, g) %>%
gather(param, value) %>%
group_by(param) %>%
summarise( min(value), max(value) )
0.00000613
0.000512
0.000512/1E4
0.000512*1E4
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
Stage1_model %>% ggplot() + geom_point(aes(lnh, g))
Stage1_model %>% rename(`Country Name` = Country) %>%
mutate(l_m = l*1E5) %>%
compute_table1
#################################################
# Stage Two - CLaM
#################################################
Stage1_model %>% compute_stage2 -> Stage2_model
Stage2_model
# Function to minimize the output
fit_model = function(qtx, Age) optim(
par=c( 1E-4, 0, 1E-2 ), # <- these starting points were chosen to avoid local-minimas
fn=U(qtx, Age),
gr=dU(qtx, Age),
lower = c(0, 0, 0),
upper = c(min(qtx), 1E-3, 0.25), # Chosen emperically based on "zero-makeham" results
method = 'L-BFGS-B'
)
# Run optimization
dataset %>%
filter(between(Age, 35, 95)) %>%
mutate(
qtx = -log( 1-qx )
) %>%
group_by(Gender, Country) %>% nest %>% mutate(
model = map(data, ~fit_model(.$qtx, .$Age)$par ),
l = map_dbl(model, ~.[1]),
H = map_dbl(model, ~.[2]),
g = map_dbl(model, ~.[3]),
h = g*H/(exp(g)-1),
lnh = log(h),
m = (log(g) - lnh)/g,
b = 1/g,
U = map2_dbl(data, model, ~U(.x$qtx, .x$Age)(.y))
) -> Stage1_model
Stage1_model %>% ggplot() + geom_point(aes(lnh, g))
Stage1_model %>% rename(`Country Name` = Country) %>%
mutate(l_m = l*1E5) %>%
compute_table1
#################################################
# Stage Two - CLaM
#################################################
Stage1_model %>% compute_stage2 -> Stage2_model
Stage2_model
Stage2_model
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
Stage1_model  %>% write_rds("./data/02_models/stage1_optim.rds")
Stage1_model %>% ggplot() + geom_point(aes(lnh, g))
Stage1_model %>% rename(`Country Name` = Country) %>%
mutate(l_m = l*1E5) %>%
compute_table1
Stage2_model
#################################################
# Stage Two - CLaM
#################################################
Stage1_model %>% compute_stage2 -> Stage2_model
Stage2_model
Stage1_model %>% compute_stage2
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
Stage1_model %>% rename(`Country Name` = Country) %>%
mutate(l_m = l*1E5)
Stage1_model %>%
select(Gender, Country, l, H, g)
Stage1_model %>%
select(Gender, Country, l, H, g) %>%
mutate( l = 1E5 )
Stage1_model %>%
select(Gender, Country, l, H, g) %>%
mutate( l = l*1E5 )
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
source('/mnt/sd-linux/projects/Freelance/Moshe-Book/scripts/01_full_optimization.R', echo=TRUE)
